{
  "algorithm": {
    "parameters": [
      {
        "name": "args",
        "type": "ArgsGetV1CryptocurrencyQuotesHistorical"
      }
    ],
    "statements": [],
    "typeReturn": "CryptocurrencyQuotesHistoricalResponseModel",
    "variables": []
  },
  "routing": {
    "method": "GET",
    "parameters": [
      {
        "bind": "args.id",
        "in": "Query",
        "name": "id",
        "remarks": "One or more comma-separated CoinMarketCap cryptocurrency IDs. Example: \"1,2\""
      },
      {
        "bind": "args.symbol",
        "in": "Query",
        "name": "symbol",
        "remarks": "Alternatively pass one or more comma-separated cryptocurrency symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"symbol\" is required for this request."
      },
      {
        "bind": "args.timestart",
        "in": "Query",
        "name": "time_start",
        "remarks": "Timestamp (Unix or ISO 8601) to start returning quotes for. Optional, if not passed, we'll return quotes calculated in reverse from \"time_end\"."
      },
      {
        "bind": "args.timeend",
        "in": "Query",
        "name": "time_end",
        "remarks": "Timestamp (Unix or ISO 8601) to stop returning quotes for (inclusive). Optional, if not passed, we'll default to the current time. If no \"time_start\" is passed, we return quotes in reverse order starting from this time."
      },
      {
        "bind": "args.count",
        "in": "Query",
        "name": "count",
        "remarks": "The number of interval periods to return results for. Optional, required if both \"time_start\" and \"time_end\" aren't supplied. The default is 10 items. The current query limit is 10000."
      },
      {
        "bind": "args.interval",
        "in": "Query",
        "name": "interval",
        "remarks": "Interval of time to return data points for. See details in endpoint description."
      },
      {
        "bind": "args.convert",
        "in": "Query",
        "name": "convert",
        "remarks": "By default market quotes are returned in USD. Optionally calculate market quotes in up to 3 other fiat currencies or cryptocurrencies."
      },
      {
        "bind": "args.convertid",
        "in": "Query",
        "name": "convert_id",
        "remarks": "Optionally calculate market quotes by CoinMarketCap ID instead of symbol. This option is identical to `convert` outside of ID format. Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This parameter cannot be used when `convert` is used."
      },
      {
        "bind": "args.aux",
        "in": "Query",
        "name": "aux",
        "remarks": "Optionally specify a comma-separated list of supplemental data fields to return. Pass `price,volume,market_cap,quote_timestamp,is_active,is_fiat,search_interval` to include all auxiliary fields."
      },
      {
        "bind": "args.skipinvalid",
        "in": "Query",
        "name": "skip_invalid",
        "remarks": "Pass `true` to relax request validation rules. When requesting records on multiple cryptocurrencies an error is returned if no match is found for 1 or more requested cryptocurrencies. If set to true, invalid lookups will be skipped allowing valid cryptocurrencies to still be returned."
      }
    ],
    "path": "/v1/cryptocurrency/quotes/historical",
    "remarks": "Quotes Historical",
    "responses": [
      {
        "httpStatus": "200",
        "remarks": "Successful",
        "typeName": "CryptocurrencyQuotesHistoricalResponseModel"
      },
      {
        "httpStatus": "400",
        "remarks": "Bad Request",
        "typeName": "HttpStatus400ErrorObject"
      },
      {
        "httpStatus": "401",
        "remarks": "Unauthorized",
        "typeName": "HttpStatus401ErrorObject"
      },
      {
        "httpStatus": "403",
        "remarks": "Forbidden",
        "typeName": "HttpStatus403ErrorObject"
      },
      {
        "httpStatus": "429",
        "remarks": "Too Many Requests",
        "typeName": "HttpStatus429ErrorObject"
      },
      {
        "httpStatus": "500",
        "remarks": "Internal Server Error",
        "typeName": "HttpStatus500ErrorObject"
      }
    ],
    "tags": [
      "cryptocurrency"
    ]
  }
}