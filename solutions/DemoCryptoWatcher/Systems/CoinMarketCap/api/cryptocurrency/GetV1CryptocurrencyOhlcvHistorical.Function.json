{
  "algorithm": {
    "parameters": [
      {
        "name": "args",
        "type": "ArgsGetV1CryptocurrencyOhlcvHistorical"
      }
    ],
    "statements": [],
    "typeReturn": "CryptocurrencyOhlcvHistoricalResponseModel",
    "variables": []
  },
  "routing": {
    "method": "GET",
    "parameters": [
      {
        "bind": "args.id",
        "in": "Query",
        "name": "id",
        "remarks": "One or more comma-separated CoinMarketCap cryptocurrency IDs. Example: \"1,1027\""
      },
      {
        "bind": "args.slug",
        "in": "Query",
        "name": "slug",
        "remarks": "Alternatively pass a comma-separated list of cryptocurrency slugs. Example: \"bitcoin,ethereum\""
      },
      {
        "bind": "args.symbol",
        "in": "Query",
        "name": "symbol",
        "remarks": "Alternatively pass one or more comma-separated cryptocurrency symbols. Example: \"BTC,ETH\". At least one \"id\" *or* \"slug\" *or* \"symbol\" is required for this request."
      },
      {
        "bind": "args.timeperiod",
        "in": "Query",
        "name": "time_period",
        "remarks": "Time period to return OHLCV data for. The default is \"daily\". See the main endpoint description for details."
      },
      {
        "bind": "args.timestart",
        "in": "Query",
        "name": "time_start",
        "remarks": "Timestamp (Unix or ISO 8601) to start returning OHLCV time periods for. Only the date portion of the timestamp is used for daily OHLCV so it's recommended to send an ISO date format like \"2018-09-19\" without time."
      },
      {
        "bind": "args.timeend",
        "in": "Query",
        "name": "time_end",
        "remarks": "Timestamp (Unix or ISO 8601) to stop returning OHLCV time periods for (inclusive). Optional, if not passed we'll default to the current time. Only the date portion of the timestamp is used for daily OHLCV so it's recommended to send an ISO date format like \"2018-09-19\" without time."
      },
      {
        "bind": "args.count",
        "in": "Query",
        "name": "count",
        "remarks": "Optionally limit the number of time periods to return results for. The default is 10 items. The current query limit is 10000 items."
      },
      {
        "bind": "args.interval",
        "in": "Query",
        "name": "interval",
        "remarks": "Optionally adjust the interval that \"time_period\" is sampled. See main endpoint description for available options."
      },
      {
        "bind": "args.convert",
        "in": "Query",
        "name": "convert",
        "remarks": "By default market quotes are returned in USD. Optionally calculate market quotes in up to 3 fiat currencies or cryptocurrencies."
      },
      {
        "bind": "args.convertid",
        "in": "Query",
        "name": "convert_id",
        "remarks": "Optionally calculate market quotes by CoinMarketCap ID instead of symbol. This option is identical to `convert` outside of ID format. Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This parameter cannot be used when `convert` is used."
      },
      {
        "bind": "args.skipinvalid",
        "in": "Query",
        "name": "skip_invalid",
        "remarks": "Pass `true` to relax request validation rules. When requesting records on multiple cryptocurrencies an error is returned if any invalid cryptocurrencies are requested or a cryptocurrency does not have matching records in the requested timeframe. If set to true, invalid lookups will be skipped allowing valid cryptocurrencies to still be returned."
      }
    ],
    "path": "/v1/cryptocurrency/ohlcv/historical",
    "remarks": "OHLCV Historical",
    "responses": [
      {
        "httpStatus": "200",
        "remarks": "Successful",
        "typeName": "CryptocurrencyOhlcvHistoricalResponseModel"
      },
      {
        "httpStatus": "400",
        "remarks": "Bad Request",
        "typeName": "HttpStatus400ErrorObject"
      },
      {
        "httpStatus": "401",
        "remarks": "Unauthorized",
        "typeName": "HttpStatus401ErrorObject"
      },
      {
        "httpStatus": "403",
        "remarks": "Forbidden",
        "typeName": "HttpStatus403ErrorObject"
      },
      {
        "httpStatus": "429",
        "remarks": "Too Many Requests",
        "typeName": "HttpStatus429ErrorObject"
      },
      {
        "httpStatus": "500",
        "remarks": "Internal Server Error",
        "typeName": "HttpStatus500ErrorObject"
      }
    ],
    "tags": [
      "cryptocurrency"
    ]
  }
}