{
  "algorithm": {
    "parameters": [
      {
        "name": "args",
        "type": "ArgsGetV1CryptocurrencyListingsLatest"
      }
    ],
    "statements": [],
    "typeReturn": "CryptocurrencyListingsLatestResponseModel1",
    "variables": []
  },
  "routing": {
    "method": "GET",
    "parameters": [
      {
        "bind": "args.start",
        "in": "Query",
        "name": "start",
        "remarks": "Optionally offset the start (1-based index) of the paginated list of items to return."
      },
      {
        "bind": "args.limit",
        "in": "Query",
        "name": "limit",
        "remarks": "Optionally specify the number of results to return. Use this parameter and the \"start\" parameter to determine your own pagination size."
      },
      {
        "bind": "args.pricemin",
        "in": "Query",
        "name": "price_min",
        "remarks": "Optionally specify a threshold of minimum USD price to filter results by."
      },
      {
        "bind": "args.pricemax",
        "in": "Query",
        "name": "price_max",
        "remarks": "Optionally specify a threshold of maximum USD price to filter results by."
      },
      {
        "bind": "args.marketcapmin",
        "in": "Query",
        "name": "market_cap_min",
        "remarks": "Optionally specify a threshold of minimum market cap to filter results by."
      },
      {
        "bind": "args.marketcapmax",
        "in": "Query",
        "name": "market_cap_max",
        "remarks": "Optionally specify a threshold of maximum market cap to filter results by."
      },
      {
        "bind": "args.volume24hmin",
        "in": "Query",
        "name": "volume_24h_min",
        "remarks": "Optionally specify a threshold of minimum 24 hour USD volume to filter results by."
      },
      {
        "bind": "args.volume24hmax",
        "in": "Query",
        "name": "volume_24h_max",
        "remarks": "Optionally specify a threshold of maximum 24 hour USD volume to filter results by."
      },
      {
        "bind": "args.circulatingsupplymin",
        "in": "Query",
        "name": "circulating_supply_min",
        "remarks": "Optionally specify a threshold of minimum circulating supply to filter results by."
      },
      {
        "bind": "args.circulatingsupplymax",
        "in": "Query",
        "name": "circulating_supply_max",
        "remarks": "Optionally specify a threshold of maximum circulating supply to filter results by."
      },
      {
        "bind": "args.percentchange24hmin",
        "in": "Query",
        "name": "percent_change_24h_min",
        "remarks": "Optionally specify a threshold of minimum 24 hour percent change to filter results by."
      },
      {
        "bind": "args.percentchange24hmax",
        "in": "Query",
        "name": "percent_change_24h_max",
        "remarks": "Optionally specify a threshold of maximum 24 hour percent change to filter results by."
      },
      {
        "bind": "args.convert",
        "in": "Query",
        "name": "convert",
        "remarks": "Optionally calculate market quotes in up to 120 currencies at once by passing a comma-separated list of cryptocurrency or fiat currency symbols. Each additional convert option beyond the first requires an additional call credit. A list of supported fiat options can be found [here](#section/Standards-and-Conventions). Each conversion is returned in its own \"quote\" object."
      },
      {
        "bind": "args.convertid",
        "in": "Query",
        "name": "convert_id",
        "remarks": "Optionally calculate market quotes by CoinMarketCap ID instead of symbol. This option is identical to `convert` outside of ID format. Ex: convert_id=1,2781 would replace convert=BTC,USD in your query. This parameter cannot be used when `convert` is used."
      },
      {
        "bind": "args.sort",
        "in": "Query",
        "name": "sort",
        "remarks": "What field to sort the list of cryptocurrencies by."
      },
      {
        "bind": "args.sortdir",
        "in": "Query",
        "name": "sort_dir",
        "remarks": "The direction in which to order cryptocurrencies against the specified sort."
      },
      {
        "bind": "args.cryptocurrencytype",
        "in": "Query",
        "name": "cryptocurrency_type",
        "remarks": "The type of cryptocurrency to include."
      },
      {
        "bind": "args.tag",
        "in": "Query",
        "name": "tag",
        "remarks": "The tag of cryptocurrency to include."
      },
      {
        "bind": "args.aux",
        "in": "Query",
        "name": "aux",
        "remarks": "Optionally specify a comma-separated list of supplemental data fields to return. Pass `num_market_pairs,cmc_rank,date_added,tags,platform,max_supply,circulating_supply,total_supply,market_cap_by_total_supply,volume_24h_reported,volume_7d,volume_7d_reported,volume_30d,volume_30d_reported,is_market_cap_included_in_calc` to include all auxiliary fields."
      }
    ],
    "path": "/v1/cryptocurrency/listings/latest",
    "remarks": "Listings Latest",
    "responses": [
      {
        "httpStatus": "200",
        "remarks": "Successful",
        "typeName": "CryptocurrencyListingsLatestResponseModel1"
      },
      {
        "httpStatus": "400",
        "remarks": "Bad Request",
        "typeName": "HttpStatus400ErrorObject"
      },
      {
        "httpStatus": "401",
        "remarks": "Unauthorized",
        "typeName": "HttpStatus401ErrorObject"
      },
      {
        "httpStatus": "403",
        "remarks": "Forbidden",
        "typeName": "HttpStatus403ErrorObject"
      },
      {
        "httpStatus": "429",
        "remarks": "Too Many Requests",
        "typeName": "HttpStatus429ErrorObject"
      },
      {
        "httpStatus": "500",
        "remarks": "Internal Server Error",
        "typeName": "HttpStatus500ErrorObject"
      }
    ],
    "security": [
      {
        "condition": [
          {
            "securitySchemeName": "ApiKey"
          }
        ],
        "remarks": ""
      }
    ],
    "tags": [
      "cryptocurrency"
    ]
  }
}