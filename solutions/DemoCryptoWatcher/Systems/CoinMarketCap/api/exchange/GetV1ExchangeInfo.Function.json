{
  "algorithm": {
    "parameters": [
      {
        "name": "args",
        "type": "ArgsGetV1ExchangeInfo"
      }
    ],
    "statements": [],
    "typeReturn": "ExchangesInfoResponseModel",
    "variables": []
  },
  "routing": {
    "method": "GET",
    "parameters": [
      {
        "bind": "args.id",
        "in": "Query",
        "name": "id",
        "remarks": "One or more comma-separated CoinMarketCap cryptocurrency exchange ids. Example: \"1,2\""
      },
      {
        "bind": "args.slug",
        "in": "Query",
        "name": "slug",
        "remarks": "Alternatively, one or more comma-separated exchange names in URL friendly shorthand \"slug\" format (all lowercase, spaces replaced with hyphens). Example: \"binance,gdax\". At least one \"id\" *or* \"slug\" is required."
      },
      {
        "bind": "args.aux",
        "in": "Query",
        "name": "aux",
        "remarks": "Optionally specify a comma-separated list of supplemental data fields to return. Pass `urls,logo,description,date_launched,notice,status` to include all auxiliary fields."
      }
    ],
    "path": "/v1/exchange/info",
    "remarks": "Metadata",
    "responses": [
      {
        "httpStatus": "200",
        "remarks": "Successful",
        "typeName": "ExchangesInfoResponseModel"
      },
      {
        "httpStatus": "400",
        "remarks": "Bad Request",
        "typeName": "HttpStatus400ErrorObject"
      },
      {
        "httpStatus": "401",
        "remarks": "Unauthorized",
        "typeName": "HttpStatus401ErrorObject"
      },
      {
        "httpStatus": "403",
        "remarks": "Forbidden",
        "typeName": "HttpStatus403ErrorObject"
      },
      {
        "httpStatus": "429",
        "remarks": "Too Many Requests",
        "typeName": "HttpStatus429ErrorObject"
      },
      {
        "httpStatus": "500",
        "remarks": "Internal Server Error",
        "typeName": "HttpStatus500ErrorObject"
      }
    ],
    "tags": [
      "exchange"
    ]
  }
}